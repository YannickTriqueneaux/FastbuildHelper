
ForEach( .CompilerConfig in .CompilerConfigs )
{
	Using( .CompilerConfig )
	Using( .CompiledFileExtensions )
	
	.aliasName 	= '$ProjectName$-$Platform$-$Config$'
    .aliasTestName = 'Tests-$aliasName$'

#include "../Compilers/Tools/AddIncludePaths.bff"

	Library( '$aliasName$-Lib' )
    {
		.CompilerInputUnity			= '$ProjectName$-Unity'
		.CompilerOutputPath			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/'
		.LibrarianOutput 			= "$BuildDestination$/$Platform$-$Config$/" + .libNamePrefix + "$ProjectName$" + .staticLibExt

        .CompilerOptions            + .DLLCompilerOptions //required in 64bits to any DLL who want to build with a dependencies on this library
	}

#if __WINDOWS__
	ObjectList( '$aliasName$-Obj' )
    {
#include "../Compilers/Tools/AddTestIncludePaths.bff"
		.CompilerInputFiles        	= '$TestSourcesPath$/Main.test.cc'
		.CompilerOutputPath		   	= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/'
	}
#endif
#if __LINUX__
	Library( '$aliasName$-Obj' )
    {
#include "../Compilers/Tools/AddTestIncludePaths.bff"
		.CompilerInputFiles         = '$TestSourcesPath$/Main.test.cc'
		.CompilerOutputPath			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/'
		.LibrarianOutput 			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/Main.test' + .staticLibExt
	}
#endif

	Executable( '$aliasName$-EXE' )
	{
        .Libraries = { '$aliasName$-Obj' }

        ForEach(.dlib in .DependenciesLibraries)
        {
            ^Libraries + { "$dlib$-$Platform$-$Config$-Lib" }
        }

									+ '$aliasName$-Lib'
		.LinkerOptions				+ .PlatformDefaultLibs
		.LinkerOutput				= '$BuildDestination$/$Platform$-$Config$/Tests-$ProjectName$' + .executableExt
	}	
	Alias( '$aliasName$' ) { .Targets = { '$aliasName$-EXE' } }
	Alias( '$aliasTestName$' ) { .Targets = { '$aliasName$-EXE' } }
}

Alias( '$ProjectName$' )
{
	Using( .DefaultCompilerConfig )
	.aliasName 	= '$ProjectName$-$Platform$-$Config$'
    .aliasTestName = 'Tests-$aliasName$'
	.Targets = { '$aliasName$','$aliasTestName$' }
}



.projectNames + "$ProjectName$"
.projectTestNames + "Tests-$ProjectName$"