
ForEach( .CompilerConfig in .CompilerConfigs )
{
	Using( .CompilerConfig )
	Using( .CompiledFileExtensions )
	
    .aliasName  = "$ProjectName$-$Platform$-$Config$"

#include "../Architecture/Tools/AddIncludePaths.bff"
#include "../Architecture/Tools/AddLibraryPaths.bff"
#include "../Architecture/Tools/AddExtraDefines.bff"

#if __WINDOWS__
    ObjectList( "$aliasName$-Obj" )
    {
        .CompilerOptions            + .DLLCompilerOptions
                                    + .IsBigObject
        .CompilerInputUnity			= "$ProjectName$-Unity"
        .CompilerOutputPath		   	= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
    }
#endif

#if __LINUX__
    Library( "$aliasName$-Obj" )
    {
        .CompilerOptions            + .DLLCompilerOptions
        .CompilerInputUnity			= "$ProjectName$-Unity"
        .CompilerOutputPath			= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
        .LibrarianOutput 			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$' + .staticLibExt
    }
#endif


    DLL("$aliasName$-DLL")
    {
        .Libraries                  = { "$aliasName$-Obj" }

        ForEach(.pdep in .ProjectDependencies)
        {
            ^Libraries              + "$pdep$-$Platform$-$Config$-Lib"
        }

#include "../Architecture/Tools/AddExternalLibraries.bff"
        .LinkerOptions              + .DLLLinkerOptions
                                    + .PlatformDefaultLibs
                                    
        .LinkerOutput = "$BuildDestination$/$Platform$-$Config$/" + .buildDestinationFolder + .libNamePrefix + "$ProjectName$" + .dynamicLibExt
    }

    Alias("$aliasName$") { .Targets = { "$aliasName$-DLL" } }
}

Alias( "$ProjectName$" )
{
	Using( .DefaultCompilerConfig )

	.Targets                        = { "$ProjectName$-$Platform$-$Config$" }
}


.ProjectNames + "$ProjectName$"