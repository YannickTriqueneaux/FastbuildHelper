
ForEach( .CompilerConfig in .CompilerConfigs )
{
	Using( .CompilerConfig )
	Using( .CompiledFileExtensions )
	
    .aliasName      = "$ProjectName$-$Platform$-$Config$"
    .aliasTestName  = "Tests-$aliasName$"

#include "../Architecture/Tools/AddIncludePaths.bff"
#include "../Architecture/Tools/AddLibraryPaths.bff"
#include "../Architecture/Tools/AddExtraDefines.bff"
#include "../Architecture/Tools/AddExtraCompileFlags.bff"
#include "../Architecture/Tools/AddExtraLinkFlags.bff"
#include "../Architecture/Tools/AddExternalLibraries.bff"

    Library("$aliasName$-Lib")
    {
        .CompilerInputPath = "$SourcesPath$/"
        .CompilerInputPattern = "*.cc"
        .CompilerInputFiles = .ProjectExtraCompileFiles
        .CompilerInputExcludePath = "$SourcesPath$/Tests"
        .CompilerOutputPath = "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
        .LibrarianOutput = "$BuildDestination$/$Platform$-$Config$/" + .buildDestinationFolder + .libNamePrefix + "$ProjectName$" + .staticLibExt

    }

#if __WINDOWS__
    ObjectList( "$aliasName$-Obj" )
    {
        .CompilerInputPath          = "$SourcesPath$/"
        .CompilerInputPattern       = "*.cc"
        .CompilerInputFiles         = .ProjectExtraCompileFiles
        .CompilerInputExcludePath    = "$SourcesPath$/Tests"

        .CompilerOutputPath		   	= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
        .CompilerOptions            + .DLLCompilerOptions //required in 64bits to any DLL who want to build with a dependencies on this library
                                    + .CppCompilerOptions
    }
#endif

#if __LINUX__
    Library( "$aliasName$-Obj" )
    {
        .CompilerInputPath          = "$SourcesPath$/"
        .CompilerInputPattern       = "*.cc"
        .CompilerInputFiles         = .ProjectExtraCompileFiles
        .CompilerInputExcludePath    = "$SourcesPath$/Tests"

        .CompilerOutputPath			= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
        .LibrarianOutput 			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$' + .staticLibExt
        .CompilerOptions            + .DLLCompilerOptions //required in 64bits to any DLL who want to build with a dependencies on this library
                                    + .CppCompilerOptions
}
#endif


    DLL("$aliasName$-DLL")
    {
        .Libraries                  = { "$aliasName$-Obj" }

        ForEach(.pdep in .ProjectDependencies)
        {
            ^Libraries              + "$pdep$-$Platform$-$Config$-Lib"
        }

        .LinkerOptions              + .DLLLinkerOptions
                                    + .PlatformDefaultLibs

        .LinkerOutput = "$BuildDestination$/$Platform$-$Config$/" + .buildDestinationFolder + .libNamePrefix + "$ProjectName$" + .dynamicLibExt
    }


#if __WINDOWS__
    ObjectList("$aliasName$Test-Obj")
    {
#include "../Architecture/Tools/AddTestIncludePaths.bff"

        .CompilerInputFiles         = "$TestSourcesPath$/Main.test.cc"
        .CompilerOutputPath         = "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
    }
#endif
#if __LINUX__
    Library('$aliasName$Test-Obj')
    {
#include "../Architecture/Tools/AddTestIncludePaths.bff"
        .CompilerOptions            + .CppCompilerOptions

        .CompilerInputFiles         = '$TestSourcesPath$/Main.test.cc'
        .CompilerOutputPath         = '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/'
        .LibrarianOutput            = '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/Main.test' + .staticLibExt
    }
#endif

    Executable("$aliasName$-EXE")
    {
        .Libraries                  = { "$aliasName$Test-Obj","$aliasName$-DLL" }

        ForEach(.pdep in .ProjectDependencies)
        {
            ^Libraries              + "$pdep$-$Platform$-$Config$-Lib"
        }

        .LinkerOptions              + .PlatformDefaultLibs

        .LinkerOutput               = "$BuildDestination$/$Platform$-$Config$/Tests-$ProjectName$" + .executableExt
    }


    Alias("$aliasName$") {          .Targets = { "$aliasName$-DLL" } }
    Alias("$aliasTestName$") {      .Targets = { "$aliasName$-EXE" } }
}

Alias( "$ProjectName$" )
{
	Using( .DefaultCompilerConfig )
        
    .aliasName                      = "$ProjectName$-$Platform$-$Config$"
    .Targets                        = { .aliasName , "Tests-$aliasName$" }
}