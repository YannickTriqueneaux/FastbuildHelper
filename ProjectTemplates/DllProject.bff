
//-  Project template for building a DLL  -----------------------------------------------------------
//
//  This templates is only tested on Windows and Linux
//  
//  This one will build all *.cc files in the folder   $SourcesPath$/  including sub folders
//  also all .ExtraCompileFiles
//  
//
//  The output DLL's name will be:  
//      * $ProjectName$.dll     pn Windows
//      * $ProjectName$.so      on Linux
//
//
//  info: This file could be better factorised by using more #include files - but don't do that
//        The file have to stay like that in order to avoid to get an unreadable template
//---------------------------------------------------------------------------------------------------

//FASTBuild documentation
//see   http://www.fastbuild.org/docs/functions/dll.html
//      http://www.fastbuild.org/docs/functions/objectlist.html
//      http://www.fastbuild.org/docs/functions/library.html

ForEach( .CompilerConfig in .CompilerConfigs )
{
	Using( .CompilerConfig )
	Using( .CompiledFileExtensions )
	
    .aliasName  = "$ProjectName$-$Platform$-$Config$"

#include "../Architecture/Tools/AddIncludePaths.bff"
#include "../Architecture/Tools/AddLibraryPaths.bff"
#include "../Architecture/Tools/AddExtraDefines.bff"
#include "../Architecture/Tools/AddExtraCompileFlags.bff"
#include "../Architecture/Tools/AddExtraLinkFlags.bff"
#include "../Architecture/Tools/AddExternalLibraries.bff"

#if __WINDOWS__
    ObjectList( "$aliasName$-Obj" )
    {
        .CompilerOptions            + .DLLCompilerOptions
                                    + .CppCompilerOptions
                                    + .IsBigObject

        .CompilerInputPath          = "$SourcesPath$/"
        .CompilerInputPattern       = "*.cc"
        .CompilerInputFiles         = .ProjectExtraCompileFiles
        .CompilerOutputPath		   	= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
    }
#endif

#if __LINUX__
    Library( "$aliasName$-Obj" )
    {
        .CompilerOptions            + .DLLCompilerOptions
                                    + .CppCompilerOptions

        .CompilerInputPath          = "$SourcesPath$/"
        .CompilerInputPattern       = "*.cc"
        .CompilerInputFiles         = .ProjectExtraCompileFiles
        .CompilerOutputPath			= "$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$/"
        .LibrarianOutput 			= '$BuildDestination$/$Platform$-$Config$/Obj/$ProjectName$' + .staticLibExt
    }
#endif


    DLL("$aliasName$-DLL")
    {
        .Libraries                  = { "$aliasName$-Obj" }

        ForEach(.pdep in .ProjectDependencies)
        {
            ^Libraries              + "$pdep$-$Platform$-$Config$-Lib"
        }

        .LinkerOptions              + .DLLLinkerOptions
                                    + .PlatformDefaultLibs
                                    
        .LinkerOutput = "$BuildDestination$/$Platform$-$Config$/" + .buildDestinationFolder + .libNamePrefix + "$ProjectName$" + .dynamicLibExt
    }

    Alias("$aliasName$") { .Targets = { "$aliasName$-DLL" } }
}

Alias( "$ProjectName$" )
{
	Using( .DefaultCompilerConfig )

	.Targets                        = { "$ProjectName$-$Platform$-$Config$" }
}